import telebot
import os
import time
import requests
import logging
import atexit


from config import api_key, directory, chat_support
from telebot import apihelper
from botCheck import checkFIO, check_18, validate_phone, decoding, check_Cheque, create_button
from datetime import date
from user import User
from telebot import types
from telegram_bot_calendar import DetailedTelegramCalendar, LSTEP

uid = os.environ
is_waiting_for_date = {}
bot = telebot.TeleBot(api_key)

direct = directory
CHAT_ID = None
PHOTO_PATH = os.path.join(direct, 'downloaded_photo.png')
CONVERTED_PHOTO_PATH = os.path.join(direct, 'converted_photo.png')
LSTEP = {'y': '–≥–æ–¥', 'm': '–º–µ—Å—è—Ü', 'd': '–¥–µ–Ω—å'}

"""–î–æ–ø–ª-—Ñ—É–Ω–∫—Ü–∏–∏"""

# –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ —Ç–µ—Ö-–ø–æ–¥–¥–µ—Ä–∂–∫–∏
@bot.message_handler(commands=["help"])
def help_command(message: types.Message):
    bot.send_message(message.chat.id, "t.me/KujiraKit +7 (987) 536-06-52 - –ù–∏–∫–∏—Ç–∞")

# –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –º–∞–≥–∞–∑–∏–Ω–∞ 
@bot.message_handler(commands=["shop"])
def shop_command(message: types.Message):
    bot.send_message(message.chat.id, "8 (963) 379-09-99 - –ú–∞–≥–∞–∑–∏–Ω—ã Enot Hookah Market")

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–≤–æ–¥–∞ –∫–æ–º–∞–Ω–¥—ã
def check_command(message):
    
    if message.text.startswith('/'):
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help
        if message.text == '/help':
            help_command(message)
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /shop
        elif message.text == '/shop':
            shop_command(message)
        else:
            return False
        return


"""–û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–¥"""
@bot.message_handler(commands=["start"])
def start_main(message: types.Message):

    user = User.get_user(message.from_user.id)
    user_id = message.from_user.id
    global CHAT_ID
    CHAT_ID = message.chat.id
    user_name = message.from_user
    user_link = f"https://t.me/{user_name.username}"
    user.linkT = user_link
    
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –•–æ—Ç–∏—Ç–µ –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ –†–æ–∑—ã–≥—Ä—ã—à–µ? \n–í–≤–µ–¥–∏—Ç–µ –í–∞—à—É –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ.")
    time.sleep(2)
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è –¥–∞—Ç—ã
    is_waiting_for_date[user_id] = True
    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
    set_calendar(message)

def set_calendar(m):
    user_id = m.from_user.id

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    calendar, step = DetailedTelegramCalendar(locale='ru', first_step="y",  min_date=date(1950, 1, 1), 
                                              max_date=date(2007, 12, 31), current_date=date(1960, 1, 1)).build()
    bot.send_message(m.chat.id, f"–í—ã–±–µ—Ä–∏—Ç–µ {LSTEP[step]}", reply_markup=calendar)

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥, —á—Ç–æ –æ–∂–∏–¥–∞–µ–º –≤—ã–±–æ—Ä –¥–∞—Ç—ã
    is_waiting_for_date[user_id] = True
    
 
@bot.callback_query_handler(func=lambda call: is_waiting_for_date.get(call.from_user.id))
def handle_calendar(call):
    user_id = call.message.from_user.id

    # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    result, key, step = DetailedTelegramCalendar(locale='ru').process(call.data)

    if not result and key:
        # –ï—Å–ª–∏ –¥–∞—Ç–∞ –µ—â–µ –Ω–µ –≤—ã–±—Ä–∞–Ω–∞ (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–µ–ª–∞–µ—Ç –≤—ã–±–æ—Ä), –æ–±–Ω–æ–≤–ª—è–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å
        bot.edit_message_text(f"–í—ã–±–µ—Ä–∏—Ç–µ {LSTEP[step]}",
                              call.message.chat.id,
                              call.message.message_id,
                              reply_markup=key)
    elif result:
        if check_18.check_BD(result) < 18:
            bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=None)
            is_waiting_for_date.pop(user_id, None)  # –°–Ω–∏–º–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è –¥–∞—Ç—ã
            bot.send_message(call.message.chat.id, "–í–∞–º –µ—â–µ –Ω–µ—Ç 18 –ª–µ—Ç. –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –í—ã –ù–ï –º–æ–∂–µ—Ç–µ –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ –†–æ–∑—ã–≥—Ä—ã—à–µ. –î–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start")
            time.sleep(1)
            return  # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å
        else:
            # –ö–æ–≥–¥–∞ –¥–∞—Ç–∞ –≤—ã–±—Ä–∞–Ω–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
            bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=None)
            bot.send_message(call.message.chat.id, "–û—Ç–ª–∏—á–Ω–æ! –î–∞–≤–∞–π—Ç–µ –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—èü•∞ –ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç? <i>–ù–∞–ø–∏—à–∏—Ç–µ –í–∞—à–µ –ò–º—è –∏ –§–∞–º–∏–ª–∏—é</i>:", parse_mode="HTML")
            
            # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞ (–≤–≤–æ–¥ –∏–º–µ–Ω–∏), –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ä–µ–∫—Ç call.message –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
            bot.register_next_step_handler(call.message, set_FIO_user)
            
            # –£–±–∏—Ä–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è –¥–∞—Ç—ã
            is_waiting_for_date.pop(user_id, None)
            
@bot.message_handler(func=lambda message: is_waiting_for_date.get(message.from_user.id, False), content_types=['text'])
def handle_text_input(message: types.Message):
    if message.text.startswith('/'):
        if message.text == '/start':
            bot.clear_step_handler_by_chat_id(message.chat.id)
            start_main(message)
            return
        elif check_command(message) == False:
            bot.send_message(message.chat.id, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞! \n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–∏—Ä–∞–π—Ç–µ –¥–∞—Ç—É —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –∫–∞–ª–µ–Ω–¥–∞—Ä—å.")
    bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–∏—Ä–∞–π—Ç–µ –¥–∞—Ç—É —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –∫–∞–ª–µ–Ω–¥–∞—Ä—å. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—å –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã.")

@bot.message_handler(func=lambda message: is_waiting_for_date.get(message.from_user.id, False), content_types=['photo', 'video', 'audio', 'document', 
                                                                                                               'sticker', 'voice', 'video_note', 'location', 
                                                                                                               'contact', 'venue', 'poll', 'dice', 'new_chat_members', 
                                                                                                               'left_chat_member', 'new_chat_title', 'new_chat_photo', 
                                                                                                               'delete_chat_photo', 'group_chat_created', 'supergroup_chat_created', 
                                                                                                               'channel_chat_created', 'migrate_to_chat_id', 'migrate_from_chat_id', 
                                                                                                               'pinned_message'])
def handle_other_media(message: types.Message):
    bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—å –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã.")

@bot.message_handler(content_types="text")
def set_FIO_user(message: types.Message) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤ –ë–î –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """

    user_message = message.text
    user = User.get_user(message.from_user.id)

    if message.content_type != "text":
        bot.send_message(message.chat.id, "–Ø –Ω–µ –º–æ–≥—É –ø–æ–Ω—è—Ç—å —á—Ç–æ –≤—ã –Ω–∞–ø–∏—Å–∞–ª–∏üòî, \n–º–Ω–µ —Ö–æ—Ç–µ–ª–æ—Å—å –±—ã —É–∑–Ω–∞—Ç—å –∫–∞–∫ –í–∞—Å –∑–æ–≤—É—ÇüôÇ")
        bot.register_next_step_handler(message, set_FIO_user)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ–º–∞–Ω–¥—É (–µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å "/")
    elif user_message.startswith('/'):
        if message.text == '/start':
            bot.clear_step_handler_by_chat_id(message.chat.id)
            start_main(message)
            return
        elif check_command(message) == False:
            bot.send_message(message.chat.id, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞! \n–ú–Ω–µ —Ö–æ—Ç–µ–ª–æ—Å—å –±—ã —É–∑–Ω–∞—Ç—å –∫–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç:")
            bot.register_next_step_handler(message, set_FIO_user)
    
        user.id = message.from_user.id
        

    else:
        if not message.text.strip():
            bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ –í–∞—à–µ –ò–º—è –∏ –§–∞–º–∏–ª–∏—éüôÇ")
            bot.register_next_step_handler(message, set_FIO_user)
        else:
            if not checkFIO.is_full_name(message.text):  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–ª–Ω–æ–µ –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö
                bot.send_message(message.chat.id, "–í–æ–∑–º–æ–∂–Ω–æ –≤—ã –¥–æ–ø—É—Å—Ç–∏–ª–∏ –æ—à–∏–±–∫—Éüòî \n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑üôÇ") 
                bot.register_next_step_handler(message, set_FIO_user)
            else:
                user.fullname = user_message.title()
                bot.send_message(message.chat.id, "–û—Å—Ç–∞–ª–æ—Å—å –≤—Å–µ–≥–æ 2 —à–∞–≥–∞ü•≥ \n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –í–≤–µ–¥–∏—Ç–µ –µ–≥–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ +79–•–•–•–•–•–•–•–•–• –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞¬ª.", reply_markup=create_button.create_phone_keyboard())           
                bot.register_next_step_handler(message, set_number_phone)

@bot.message_handler(content_types=['text', 'contact'])
def set_number_phone(message: types.Message) -> None:
    user = User.get_user(message.from_user.id)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if message.content_type == 'text':
        if message.text.startswith('/'):
            if message.text == '/start':
                bot.clear_step_handler_by_chat_id(message.chat.id)
                start_main(message)
                return
            elif check_command(message) == False:
                create_button.create_phone_keyboard()
                bot.send_message(message.chat.id, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞! \n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –µ–≥–æ.")
                bot.register_next_step_handler(message, get_photo_qr)
            else:
                create_button.create_phone_keyboard()
                bot.send_message(message.chat.id, "–¢–µ–ø–µ—Ä—å –ø—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
                bot.register_next_step_handler(message, get_photo_qr)
                return

        # –ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è
            create_button.create_phone_keyboard()
            bot.send_message(message.chat.id, "–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –µ–≥–æ:")
            bot.register_next_step_handler(message, set_number_phone)
            return

        if message.text:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–µ–∫—Å—Ç –Ω–µ –ø—É—Å—Ç–æ–π
            if validate_phone.validate_phone_number(message.text):
                user.phone = message.text
                bot.send_message(message.chat.id, "–¢–µ–ª–µ—Ñ–æ–Ω –≤–≤–µ–¥–µ–Ω –≤–µ—Ä–Ω–æ!")
                time.sleep(1)
                bot.send_message(message.chat.id, "–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —Å QR-–∫–æ–¥–æ–º.")
                bot.register_next_step_handler(message, get_photo_qr)
            else:
                create_button.create_phone_keyboard()
                bot.send_message(message.chat.id, "–í–æ–∑–º–æ–∂–Ω–æ –≤—ã –¥–æ–ø—É—Å—Ç–∏–ª–∏ –æ—à–∏–±–∫—Éüòî, \n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑üôÇ \n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å +79 –∏ –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å 11 —Ü–∏—Ñ—Ä.")
                bot.register_next_step_handler(message, set_number_phone)
        else:
            bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.")
            bot.register_next_step_handler(message, set_number_phone)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ–Ω—Ç–∞–∫—Ç
    elif message.content_type == "contact":
        if message.contact and hasattr(message.contact, 'phone_number'):  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–Ω—Ç–∞–∫—Ç –µ—Å—Ç—å –∏ —É –Ω–µ–≥–æ –µ—Å—Ç—å –Ω–æ–º–µ—Ä
            phone_number = message.contact.phone_number
            user.phone = phone_number
            bot.send_message(message.chat.id, "–¢–µ–ª–µ—Ñ–æ–Ω –≤–≤–µ–¥–µ–Ω –≤–µ—Ä–Ω–æ!", reply_markup=types.ReplyKeyboardRemove())
            time.sleep(1)
            bot.send_message(message.chat.id, "–£—Ä–∞–∞–∞! –ü–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–≥üòç \n–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —á–µ–∫–∞! (QR-–∫–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–∏–¥–µ–Ω –ø–æ–ª–Ω–æ—Å—Ç—å—é)")
            bot.register_next_step_handler(message, get_photo_qr)
        else:
            bot.send_message(message.chat.id, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞. \n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
            create_button.create_phone_keyboard()
            bot.register_next_step_handler(message, set_number_phone)

    # –ï—Å–ª–∏ –Ω–µ —Ç–µ–∫—Å—Ç –∏ –Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç
    else:
        bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞! \n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –µ–≥–æ:")
        bot.register_next_step_handler(message, set_number_phone)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–æ—Ç–æ —Å QR-–∫–æ–¥–æ–º
@bot.message_handler(content_types=['text', 'photo'])
def get_photo_qr(message: types.Message):

    if message.content_type == "text":
        if message.text.startswith('/'):
            if message.text == '/start':
                bot.clear_step_handler_by_chat_id(message.chat.id)
                start_main(message)
                return
            elif check_command(message) == False:
                bot.send_message(message.chat.id, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞! \n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ QR:")
                bot.register_next_step_handler(message, get_photo_qr)
            else:
                bot.send_message(message.chat.id, "–¢–µ–ø–µ—Ä—å –ø—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ QR:")
                bot.register_next_step_handler(message, get_photo_qr)
                return
        else:
            bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —á–µ–∫–∞! \n(QR-–∫–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–∏–¥–µ–Ω –ø–æ–ª–Ω–æ—Å—Ç—å—é)")
            bot.register_next_step_handler(message, get_photo_qr)
            return

    if message.content_type == 'photo':
        if len(message.photo) > 4:
            bot.send_message(message.chat.id, "–í—ã –ø—Ä–∏—Å–ª–∞–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–æ—Ç–æ. \n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω–æ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –º–Ω–µüôÇ")
            bot.register_next_step_handler(message, get_photo_qr)
        else:
            # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–∞–ø–∫–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–π—Ç–µ –µ–µ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
            os.makedirs(directory, exist_ok=True)
                
            # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–æ—Ç–æ
            photo_file = message.photo[-1].file_id
            file_info = bot.get_file(photo_file)
            downloaded_file = bot.download_file(file_info.file_path)

            user = User.get_user(message.from_user.id)
                
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            with open(PHOTO_PATH, 'wb') as new_file:
                new_file.write(downloaded_file)

            # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —Ñ–æ—Ç–æ –≤ JPEG
            decoding.convert_image_to_jpeg(PHOTO_PATH, CONVERTED_PHOTO_PATH)
            qr_code = decoding.call_js_qr_scanner(CONVERTED_PHOTO_PATH)
            print(qr_code)
            if "error" in qr_code:
                keyboard = create_button.create_send_exit_keyboard()
                bot.send_message(message.chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞... \n–î–∞–≤–∞–π—Ç–µ –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑? '–ü—Ä–∏—Å–ª–∞—Ç—å —á–µ–∫' –∏–ª–∏ '–í—ã–π—Ç–∏'", reply_markup=keyboard)
                bot.register_next_step_handler(message, bot_again)
            elif qr_code:  # –ï—Å–ª–∏ QR –Ω–∞–π–¥–µ–Ω ->
                decoding.get_response_FNS(qr_code)
                if "https" in qr_code:
                    keyboard = create_button.create_send_exit_keyboard()
                    bot.send_message(message.chat.id, "–ù–µ –Ω—É–∂–Ω–æ –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Å—Å—ã–ª–∫–∏. –ú–Ω–µ –Ω—É–∂–µ–Ω —á–µ–∫ –Ω–∞—à–µ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞. –•–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å? '–ü—Ä–∏—Å–ª–∞—Ç—å —á–µ–∫' –∏–ª–∏ '–í—ã–π—Ç–∏'", reply_markup=keyboard)
                    bot.register_next_step_handler(message, bot_again)
                elif check_Cheque.find_Cheque(qr_code) == "–î—É–±–ª—å":
                    keyboard = create_button.create_send_exit_keyboard()
                    bot.send_message(message.chat.id, "–í—ã –ø—Ä–∏—Å–ª–∞–ª–∏ —Å—Å—ã–ª–∫—É. –ù–∞–≤–µ—Ä–Ω–æ —Ç–∞–º —á—Ç–æ-—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µüòÅ–ù–æ –º–Ω–µ –Ω—É–∂–µ–Ω —á–µ–∫ –º–∞–≥–∞–∑–∏–Ω–∞ –ù–∞—à–µ–π —Å–µ—Ç–∏. \n–•–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å? '–ü—Ä–∏—Å–ª–∞—Ç—å —á–µ–∫' –∏–ª–∏ '–í—ã–π—Ç–∏'", reply_markup=keyboard)
                    bot.register_next_step_handler(message, bot_again)
                elif check_Cheque.find_Cheque(qr_code) == "–ü—Ä–æ—Å—Ä–æ—á–µ–Ω":
                    keyboard = create_button.create_send_exit_keyboard()
                    bot.send_message(message.chat.id, "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –¥–∞—Ç–∞ –≤ –í–∞—à–µ–º —á–µ–∫–µ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ –†–æ–∑—ã–≥—Ä—ã—à–µüòî \n–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ—â—ë –æ–¥–∏–Ω —á–µ–∫? '–ü—Ä–∏—Å–ª–∞—Ç—å —á–µ–∫' –∏–ª–∏ '–í—ã–π—Ç–∏'", reply_markup=keyboard)
                    bot.register_next_step_handler(message, bot_again)
                elif check_Cheque.find_Cheque(qr_code) == "–ú–µ–Ω—å—à–µ 2000":
                    keyboard = create_button.create_send_exit_keyboard()
                    bot.send_message(message.chat.id, "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Å—É–º–º–∞ —á–µ–∫–∞ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ –†–æ–∑—ã–≥—Ä—ã—à–µüòî –•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ—â—ë –æ–¥–∏–Ω —á–µ–∫? '–ü—Ä–∏—Å–ª–∞—Ç—å —á–µ–∫' –∏–ª–∏ '–í—ã–π—Ç–∏'", reply_markup=keyboard)
                    bot.register_next_step_handler(message, bot_again)
                elif check_Cheque.find_Cheque(qr_code) == "–ö—É–ø–ª–µ–Ω –Ω–µ –≤ Enot":
                    keyboard = create_button.create_send_exit_keyboard()
                    bot.send_message(message.chat.id, "–ß–µ–∫ –±—ã–ª –≤—ã–¥–∞–Ω –Ω–µ –≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ! üßê \n–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ—â—ë –æ–¥–∏–Ω —á–µ–∫? '–ü—Ä–∏—Å–ª–∞—Ç—å —á–µ–∫' –∏–ª–∏ '–í—ã–π—Ç–∏'", reply_markup=keyboard)
                    bot.register_next_step_handler(message, bot_again)
                else:
                    keyboard = create_button.create_send_exit_keyboard()
                    check_Cheque.record_participant(user, qr_code)
                    bot.send_message(message.chat.id, "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é!!!ü•≥–ß–µ–∫ —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –í—ã —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ –†–æ–∑—ã–≥—Ä—ã—à–µ!!! \n–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ—â—ë –æ–¥–∏–Ω —á–µ–∫? \n'–ü—Ä–∏—Å–ª–∞—Ç—å —á–µ–∫' –∏–ª–∏ '–í—ã–π—Ç–∏'", reply_markup=keyboard)
                    bot.register_next_step_handler(message, bot_again)

            else:
                bot.send_message(message.chat.id, "QR-–∫–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏üò¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä–æ–≤–∞—Ç—å QR-–∫–æ–¥ –∫—Ä—É–ø–Ω–µ–µ.üòâ")
                bot.register_next_step_handler(message, get_photo_qr)
            
            # –£–¥–∞–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
            os.remove(PHOTO_PATH)
            os.remove(CONVERTED_PHOTO_PATH)
    
    else:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —á–µ–∫–∞! \n(QR-–∫–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–∏–¥–µ–Ω –ø–æ–ª–Ω–æ—Å—Ç—å—é)")
        bot.register_next_step_handler(message, get_photo_qr)

# –§—É–Ω–∫—Ü–∏—è —Å–ø—Ä–∞—à–∏–≤–∞—é—â–∞—è –Ω—É–∂–Ω–æ –ª–∏ –∑–∞–≥—Ä—É–∂–∞—Ç—å –µ—â—ë –æ–¥–∏–Ω —á–µ–∫?
@bot.message_handler(content_types=['text'])
def bot_again(message):
    if message.content_type == 'text':
        if message.text.startswith('/'):
            if message.text == '/start':
                bot.clear_step_handler_by_chat_id(message.chat.id)
                start_main(message)
                return
            elif check_command(message) == False:
                keyboard = create_button.create_send_exit_keyboard()
                bot.send_message(message.chat.id, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞! \n–ú—ã –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–æ–≤—ã–π QR-–∫–æ–¥? '–ü—Ä–∏—Å–ª–∞—Ç—å —á–µ–∫' –∏–ª–∏ '–í—ã–π—Ç–∏':", reply_markup=keyboard)
                bot.register_next_step_handler(message, bot_again)
            else:
                keyboard = create_button.create_send_exit_keyboard()
                bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —á–µ–∫–∞! \n(QR-–∫–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–∏–¥–µ–Ω –ø–æ–ª–Ω–æ—Å—Ç—å—é) \n'–ü—Ä–∏—Å–ª–∞—Ç—å —á–µ–∫' –∏–ª–∏ '–í—ã–π—Ç–∏'", reply_markup=keyboard)
                bot.register_next_step_handler(message, bot_again)
                return
        
        if isinstance(message.text, int):
            keyboard = create_button.create_send_exit_keyboard()
            bot.send_message(message.chat.id, "–Ø –í–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é üòî \n–ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, –≤–≤–µ–¥–∏—Ç–µ /help \n'–ü—Ä–∏—Å–ª–∞—Ç—å —á–µ–∫' –∏–ª–∏ '–í—ã–π—Ç–∏'", reply_markup=keyboard)
            bot.register_next_step_handler(message, bot_again)
        elif isinstance(message.text, str):
            if message.text == "–ü—Ä–∏—Å–ª–∞—Ç—å —á–µ–∫":
                bot.send_message(message.chat.id, "–•–æ—Ä–æ—à–æ! –ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ —Ñ–æ—Ç–æ.", reply_markup=types.ReplyKeyboardRemove())
                get_photo_qr(message)
            elif message.text == "–í—ã—Ö–æ–¥":
                bot.send_message(message.chat.id, "–≠—Ç–æ –±—ã–ª–æ –∫–ª–∞—Å—Å–Ω–æüòò –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!üôÇ", reply_markup=types.ReplyKeyboardRemove())
            else: 
                keyboard = create_button.create_send_exit_keyboard()
                bot.send_message(message.chat.id, "–í—Å–µ –µ—â–µ –í–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é... –•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ—â—ë –æ–¥–∏–Ω —á–µ–∫? \n'–ü—Ä–∏—Å–ª–∞—Ç—å —á–µ–∫' –∏–ª–∏ '–í—ã–π—Ç–∏'", reply_markup=keyboard)
                bot.register_next_step_handler(message, bot_again)
        else:
            keyboard = create_button.create_send_exit_keyboard()
            bot.send_message(message.chat.id, "–Ø –≤–æ–æ–±—â–µ –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–Ω—è–ª.  –•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ—â—ë –æ–¥–∏–Ω —á–µ–∫? \n'–ü—Ä–∏—Å–ª–∞—Ç—å —á–µ–∫' –∏–ª–∏ '–í—ã–π—Ç–∏'", reply_markup=keyboard)
            bot.register_next_step_handler(message, bot_again)
    else:
        keyboard = create_button.create_send_exit_keyboard()
        bot.send_message(message.chat.id, "–í—ã –ø—Ä–∏—Å–ª–∞–ª–∏ –Ω–µ –æ—Ç–≤–µ—Ç. –ò –≤—Å—ë —Ç–∞–∫–∏, –ë—É–¥–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–æ–≤—ã–π QR-–∫–æ–¥? '–ü—Ä–∏—Å–ª–∞—Ç—å —á–µ–∫' –∏–ª–∏ '–í—ã–π—Ç–∏'", reply_markup=keyboard)
        bot.register_next_step_handler(message, bot_again)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(filename='bot_errors.log', level=logging.ERROR,
                    format='%(asctime)s - %(levelname)s - %(message)s')

@atexit.register
def goodbye():
    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –±–æ—Ç –≤—ã–∫–ª—é—á–µ–Ω –≤ —á–∞—Ç —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º
    bot.send_message(chat_support, "Bot offline")

if __name__ == "__main__":
    while True:
        try:
            bot.polling(timeout=120, long_polling_timeout=120)
        
        # –û—à–∏–±–∫–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å API Telegram
        except apihelper.ApiTelegramException as e:
            logging.error(f"ApiTelegramException: {e}", exc_info=True)
            bot.send_message(CHAT_ID, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ API Telegram: {e}. \n–ë–æ—Ç –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è.")
            bot.send_message(chat_support, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞! –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ API Telegram: {e}.")

            if e.error_code == 429:  # –û—à–∏–±–∫–∞ "Too Many Requests"
                retry_after = int(e.result_json['parameters']['retry_after'])
                bot.send_message(chat_support, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞! –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ API Telegram 429: {e}.")
                time.sleep(retry_after)

            elif e.error_code == 409:  # –ö–æ–Ω—Ñ–ª–∏–∫—Ç —Å –¥—Ä—É–≥–∏–º —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–º –±–æ—Ç–∞
                bot.send_message(CHAT_ID, "–ö–æ–Ω—Ñ–ª–∏–∫—Ç: –±–æ—Ç —É–∂–µ –∑–∞–ø—É—â–µ–Ω –≤ –¥—Ä—É–≥–æ–º –º–µ—Å—Ç–µ. \n–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥.")
                bot.send_message(chat_support, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞! –ö–æ–Ω—Ñ–ª–∏–∫—Ç: –±–æ—Ç —É–∂–µ –∑–∞–ø—É—â–µ–Ω –≤ –¥—Ä—É–≥–æ–º –º–µ—Å—Ç–µ: {e}.")
                time.sleep(5)
            
            else:
                bot.send_message(CHAT_ID, f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ API Telegram: {e}. \n–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥.")
                bot.send_message(chat_support, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞! –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ API Telegram: {e}.")
                time.sleep(5)

        # –û—à–∏–±–∫–∞ –æ–∂–∏–¥–∞–Ω–∏—è
        except requests.exceptions.ReadTimeout as e:
            logging.error(f"ReadTimeout: {e}", exc_info=True)
            bot.send_message(CHAT_ID, f"–û—à–∏–±–∫–∞: –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è. \n–ë–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—Å—è —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥. ")
            time.sleep(5)

        # –î—Ä—É–≥–∏–µ –æ—à–∏–±–∫–∏
        except Exception as e:
            logging.error(f"Exception: {e}", exc_info=True)
            bot.send_message(CHAT_ID, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}. \n–ë–æ—Ç –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥.")
            time.sleep(5)

        else:
            # –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –±–æ—Ç–∞
            bot.send_message(CHAT_ID, "–ë–æ—Ç –±—ã–ª –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω –ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏.")
